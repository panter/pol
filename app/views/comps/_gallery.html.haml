-# CompGallery always comes as a pair - one represents the control fields and
-# one the display were the selected image is rendered to

-if gallery.is_control?
  .gallery-box.clearfix
    - gallery.children.each do |image|
      - next unless image.is_a?(CompImage)
      - path = image.media.url('gallery-thumbnail')
      - if require_controls?
        .gallery-image{ :onmouseover => "$('comp_gallery_control_#{image.id}').show();", :onmouseout => "$('comp_gallery_control_#{image.id}').hide();" }
          %span{ :id => "comp_gallery_control_#{image.id}", :style => 'position: absolute; display: none;' }
            != render_gallery_controls(gallery, image)
          %a{ :href => '#', :onclick => "return galleryShowEntry(#{image.id});"}
            != image_tag path
      - else
        .gallery-image
          %a{ :href => '#', :onclick => "return galleryShowEntry(#{image.id});"}
            != image_tag path
      
  !=textilize gallery.content

- if gallery.is_view?
  .gallery-view
    - images = gallery.siblings
    - first_path = images.first.media.url(gallery.style_class)
    - images.each do |image|
      - display = (images.first == image ? '' : 'none')
      .gallery-view-image{ :id => "gallery-view-image-#{image.id}", :style => "display: #{display};" }
        - path = image.media.url(gallery.style_class)
        -# we set the image src for all gallery images to the first image
        -# after page load, we cycle trough images w/ javascript and preload
        -# and replace the image.
        -# simply setting display:none does trigger a load on some browsers
        != image_tag first_path, :preload => path, :class => 'preload'
        != textilize image.content
